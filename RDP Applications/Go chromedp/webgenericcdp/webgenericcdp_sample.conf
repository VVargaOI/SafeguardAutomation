# IMPORTANT: Write permissions of the configuration files, as well as the RemoteApp configuration should be restricted to avoid password leaking.

##dumpStdinToLog -- WARNING, this contains the clear-text password
#dumpStdinToLog=false

##chromedp_logging -- error|info|debug (default:error) WARNING, the 'debug' option contains the clear-text password
#chromedp_logging=error

##url
## Supports adding one dynamic value from Safeguard
## Sample: https://{Target.AssetNetworkAddress}/login
url=https://

##browser -- chrome or edge (default: chrome)
#browser=chrome

##loginActions
##  Format: <action>::<CSS-selector>::<value-from-Safeguard-if-applicable>
##  Actions:
##    v > Enter value into the given element.
##          If entry is enclosed between curly brackets {} the script looks up the value in the data received from Safeguard
##          Otherwise if the entry starts with kb. then the script is entering the static keyboard key, like kb.Enter
##          Otherwise the script enters the static string from the configuration. This may be useful for configuring instance name or tenant id via the login form.
##    s > Enter secret into the given element (same as entering value but the the value is not logged - except if chromedp_debug=true
##    c > Click the given element
##    o > Enter OTP into the given element. Must be used with {Target.TotpCodes}. The numeric value is the minimum nr. of seconds that the current OTP should be valid for. If the current TOTP expires in shorter time, the code waits for the next TOTP. This is useful to increase (e.g. to 5) in case of having TOTP invalidity issues.
##  Samples:
##    v::<selector_username_input>::{username}@{Target.AccountDomainName}||c::<selector_nextBtn>||s::#i0118::<selector_password_input>||c::<selector_loginBtn>||o::selector_otp_input::{Target.TotpCodes}::3||c::<selector_nextBtn>
##    v::<selector_username_input>::{username}@{Target.AccountDomainName}||v::<selector_username_input>::kb.Enter||s::#i0118::<selector_password_input>||v::<selector_password_input>::kb.Enter
loginActions=

##basicAuthUsername
## If configured, loginActions is ignored and basic authentication is performed using the configured username and the password received from Safeguard
## splitCharacters are taken into consideration, configure it if the default value is insufficient
## Samples:
##  basicAuthUsername={username}
##  basicAuthUsername={username}@{Target.AccountDomainName}
##  Do _not_ use {Target.AccountDomainName}\{username}
#basicAuthUsername=false

##splitCharacters
## List of characters which may be used on concatenated values like UPN or down-level logon name
## Backslash has to be escaped
#splitCharacters=@\\

##browserInputDelay -- if set (in milliseconds), the script pauses for this period between the actions instead of waiting for the next page element being visible (as it is not reliable on all websites)
#browserInputDelay=0

#browser_incognito=true

#browser_insecure=false

#browser_kiosk=false

##user_data_dir -- Set profile folder in case you wish to keep user settings, for example bookmarks
#user_data_dir=%AppData%\<path-to-folder>